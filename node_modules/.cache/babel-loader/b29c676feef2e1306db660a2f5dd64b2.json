{"ast":null,"code":"// import React, { useContext,useState } from \"react\";\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTimesCircle,faCheckCircle, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n// import zxcvbn from 'zxcvbn';\n// import { Button,Link } from '@material-ui/core';\n// import { useFormik } from \"formik\";\n// import {GoogleLogin} from 'react-google-login';\n// import { useDispatch } from 'react-redux';\n// import { useHistory } from 'react-router-dom';\n// import Icon  from './icon';\n// import useStyles from './styles';\n// import * as yup from \"yup\";\n// import axios from \"axios\";\n// import { AUTH } from '../../Components/constants/actionTypes';\n// import {\n//   BoldLink,\n//   BoxContainer,\n//   FieldContainer,\n//   FieldError,\n//   FormContainer,\n//   FormSuccess,\n//   Input,\n//   MutedLink,\n//   SubmitButton,\n//   FormError,\n//   Validity\n// } from \"./common\";\n// import { Marginer } from \"./../marginer/index\";\n// import { AccountContext } from \"./accountContext\";\n// import './validity.css';\n// import { nodeName } from \"jquery\";\n// import validator from 'validator'\n// function RegisterationForm(props) {\n//   const [ password, setPassword] = useState('');\n//   const testResult = zxcvbn(password);\n// const num = testResult.score * 100/4;\n// const [errorMessage, setErrorMessage] = useState('')\n// const [success, setSuccess] = useState(null);\n// const [error, setError] = useState(null);\n// const onSubmit = async (values) => {\n//   const { confirmPassword, ...data } = values;\n//   const response = await axios\n//     .post(\"http://127.0.0.1:8000/Kavtech/register/\", data)\n//     .catch((err) => {\n//       if (err && err.response) setError(err.response.data.message);\n//       setSuccess(null);\n//     });\n//   if (response && response.data) {\n//     setError(null);\n//     setSuccess(response.data.message);\n//     formik.resetForm();\n//   }\n// };\n//   const changePasswordColor =   () => ( {\n//     width : `${num}%`,\n//     background :  funcProgressColor(),\n//     height : ' 6px'\n//   })\n//   const funcProgressColor = () => {\n//     switch(testResult.score) {\n//       case 0:\n//         return '#828282';\n//       case 1:\n//         return '#EA1111';\n//       case 2:\n//         return '#FFAD00';\n//       case 3:\n//         return '#9bc158';\n//       case 4:\n//         return '#00b500';\n//         default:\n//           return nodeName;\n//     }\n//   }\n//   const [show, setShow] = useState(false);\n//   const { switchToSignin } = useContext(AccountContext);\n//   const handleShowHide =() =>{\n//     setShow(!show);\n//     //  PasswordStrength meter\n//   };\n//   const formik = useFormik({\n//     initialValues: {\n//       username: \"\",\n//       email: \"\",\n//       password: \"\",\n//     },\n//     validateOnBlur: true,\n//     // onSubmit,\n//     // validationSchema: validationSchema,\n//   });\n//   return (\n// <>\n//     <BoxContainer>\n//        {!error && <FormSuccess>{success ? success : \"\"}</FormSuccess>}\n//       {!success && <FormError>{error ? error : \"\"}</FormError>}\n//       <FormContainer onSubmit={formik.handleSubmit}>\n//       <FieldContainer>\n//           <Input\n//             name=\"username\"\n//             placeholder=\"Username\"\n//             value={formik.values.username}\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//           />\n//           <FieldError>\n//             {formik.touched.username && formik.errors.username\n//               ? formik.errors.username\n//               : \"\"}\n//           </FieldError>\n//         </FieldContainer>\n//         <FieldContainer>\n//           <Input\n//             name=\"username\"\n//             placeholder=\"Username\"\n//             value={formik.values.username}\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//           />\n//           <FieldError>\n//             {formik.touched.username && formik.errors.username\n//               ? formik.errors.username\n//               : \"\"}\n//           </FieldError>\n//         </FieldContainer>\n//         <FieldContainer>\n//           <Input\n//             name=\"email\"\n//             placeholder=\"Email\"\n//             value={formik.values.email}\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//           />\n//           <FieldError>\n//             {formik.touched.email && formik.errors.email\n//               ? formik.errors.email\n//               : \"\"}\n//           </FieldError>\n//         </FieldContainer>\n//         <FieldContainer>\n//         {/* <Input\n//         name=\"password\"\n//          type={show ? \"text\" : \"password\"} \n//         placeholder=\"Password\" \n//         value={formik.values.password}\n//         onChange={formik.handleChange}\n//         onBlur={formik.handleBlur}\n//         /> */}\n//         <FieldError>\n//             {formik.touched.password && formik.errors.password\n//               ? formik.errors.password\n//               : \"\"}\n//           </FieldError>\n//         </FieldContainer>\n//         {show ? (\n//        <FontAwesomeIcon \n//        className=\"faEye\" icon={faEye} \n//           id=\"show_hide\" \n//           onClick={handleShowHide}\n//           />\n//           ) : (\n//             <FontAwesomeIcon \n//             className=\"faEyeslash\" icon={faEyeSlash} \n//                id=\"show_hide\" \n//                onClick={handleShowHide}\n//                />\n//           )}\n//         <FormContainer>\n//       </FormContainer>\n//            <div id=\"password-strength\" \n//            style={changePasswordColor()}\n//             >\n//            </div>\n//       <Marginer direction=\"vertical\" margin=\"1em\" />\n//         <SubmitButton type=\"submit\" disabled={!formik.isValid}>\n//           Signup\n//         </SubmitButton>\n//         </FormContainer>\n//     <Marginer direction=\"vertical\" margin={5} />\n//     </BoxContainer>\n//     </>\n//   );\n// }\n// export default RegisterationForm","map":{"version":3,"sources":["C:/Users/dell/Desktop/Kav_frontEnd_Backend/KavtechHRM/frontend/src/Components/accountBox/RegisterationForm.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AAEA","sourcesContent":["// import React, { useContext,useState } from \"react\";\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faTimesCircle,faCheckCircle, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\n// import zxcvbn from 'zxcvbn';\r\n// import { Button,Link } from '@material-ui/core';\r\n// import { useFormik } from \"formik\";\r\n// import {GoogleLogin} from 'react-google-login';\r\n// import { useDispatch } from 'react-redux';\r\n// import { useHistory } from 'react-router-dom';\r\n// import Icon  from './icon';\r\n// import useStyles from './styles';\r\n// import * as yup from \"yup\";\r\n// import axios from \"axios\";\r\n// import { AUTH } from '../../Components/constants/actionTypes';\r\n// import {\r\n//   BoldLink,\r\n//   BoxContainer,\r\n//   FieldContainer,\r\n//   FieldError,\r\n//   FormContainer,\r\n//   FormSuccess,\r\n//   Input,\r\n//   MutedLink,\r\n//   SubmitButton,\r\n//   FormError,\r\n//   Validity\r\n// } from \"./common\";\r\n// import { Marginer } from \"./../marginer/index\";\r\n// import { AccountContext } from \"./accountContext\";\r\n// import './validity.css';\r\n// import { nodeName } from \"jquery\";\r\n// import validator from 'validator'\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function RegisterationForm(props) {\r\n\r\n//   const [ password, setPassword] = useState('');\r\n//   const testResult = zxcvbn(password);\r\n  \r\n// const num = testResult.score * 100/4;\r\n  \r\n\r\n\r\n// const [errorMessage, setErrorMessage] = useState('')\r\n// const [success, setSuccess] = useState(null);\r\n// const [error, setError] = useState(null);\r\n  \r\n// const onSubmit = async (values) => {\r\n//   const { confirmPassword, ...data } = values;\r\n\r\n//   const response = await axios\r\n//     .post(\"http://127.0.0.1:8000/Kavtech/register/\", data)\r\n//     .catch((err) => {\r\n//       if (err && err.response) setError(err.response.data.message);\r\n//       setSuccess(null);\r\n//     });\r\n\r\n//   if (response && response.data) {\r\n//     setError(null);\r\n//     setSuccess(response.data.message);\r\n//     formik.resetForm();\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n//   const changePasswordColor =   () => ( {\r\n//     width : `${num}%`,\r\n//     background :  funcProgressColor(),\r\n//     height : ' 6px'\r\n//   })\r\n\r\n//   const funcProgressColor = () => {\r\n//     switch(testResult.score) {\r\n//       case 0:\r\n//         return '#828282';\r\n//       case 1:\r\n//         return '#EA1111';\r\n//       case 2:\r\n//         return '#FFAD00';\r\n//       case 3:\r\n//         return '#9bc158';\r\n//       case 4:\r\n//         return '#00b500';\r\n//         default:\r\n//           return nodeName;\r\n      \r\n//     }\r\n//   }\r\n\r\n//   const [show, setShow] = useState(false);\r\n//   const { switchToSignin } = useContext(AccountContext);\r\n//   const handleShowHide =() =>{\r\n//     setShow(!show);\r\n//     //  PasswordStrength meter\r\n//   };\r\n\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       username: \"\",\r\n//       email: \"\",\r\n//       password: \"\",\r\n      \r\n//     },\r\n//     validateOnBlur: true,\r\n//     // onSubmit,\r\n//     // validationSchema: validationSchema,\r\n//   });\r\n  \r\n//   return (\r\n \r\n// <>\r\n\r\n\r\n//     <BoxContainer>\r\n\r\n//        {!error && <FormSuccess>{success ? success : \"\"}</FormSuccess>}\r\n//       {!success && <FormError>{error ? error : \"\"}</FormError>}\r\n  \r\n//       <FormContainer onSubmit={formik.handleSubmit}>\r\n//       <FieldContainer>\r\n//           <Input\r\n//             name=\"username\"\r\n//             placeholder=\"Username\"\r\n//             value={formik.values.username}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//           />\r\n//           <FieldError>\r\n//             {formik.touched.username && formik.errors.username\r\n//               ? formik.errors.username\r\n//               : \"\"}\r\n//           </FieldError>\r\n//         </FieldContainer>\r\n\r\n\r\n//         <FieldContainer>\r\n//           <Input\r\n//             name=\"username\"\r\n//             placeholder=\"Username\"\r\n//             value={formik.values.username}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//           />\r\n//           <FieldError>\r\n//             {formik.touched.username && formik.errors.username\r\n//               ? formik.errors.username\r\n//               : \"\"}\r\n//           </FieldError>\r\n//         </FieldContainer>\r\n\r\n\r\n\r\n\r\n\r\n//         <FieldContainer>\r\n//           <Input\r\n//             name=\"email\"\r\n//             placeholder=\"Email\"\r\n//             value={formik.values.email}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//           />\r\n//           <FieldError>\r\n//             {formik.touched.email && formik.errors.email\r\n//               ? formik.errors.email\r\n//               : \"\"}\r\n//           </FieldError>\r\n//         </FieldContainer>\r\n//         <FieldContainer>\r\n//         {/* <Input\r\n//         name=\"password\"\r\n//          type={show ? \"text\" : \"password\"} \r\n//         placeholder=\"Password\" \r\n//         value={formik.values.password}\r\n//         onChange={formik.handleChange}\r\n//         onBlur={formik.handleBlur}\r\n//         /> */}\r\n//         <FieldError>\r\n//             {formik.touched.password && formik.errors.password\r\n//               ? formik.errors.password\r\n//               : \"\"}\r\n//           </FieldError>\r\n//         </FieldContainer>\r\n//         {show ? (\r\n//        <FontAwesomeIcon \r\n//        className=\"faEye\" icon={faEye} \r\n         \r\n//           id=\"show_hide\" \r\n          \r\n//           onClick={handleShowHide}\r\n//           />\r\n\r\n//           ) : (\r\n//             <FontAwesomeIcon \r\n//             className=\"faEyeslash\" icon={faEyeSlash} \r\n              \r\n//                id=\"show_hide\" \r\n               \r\n//                onClick={handleShowHide}\r\n//                />\r\n\r\n//           )}\r\n//         <FormContainer>\r\n//       </FormContainer>\r\n        \r\n       \r\n//            <div id=\"password-strength\" \r\n            \r\n//            style={changePasswordColor()}\r\n//             >\r\n\r\n//            </div>\r\n      \r\n//       <Marginer direction=\"vertical\" margin=\"1em\" />\r\n//         <SubmitButton type=\"submit\" disabled={!formik.isValid}>\r\n//           Signup\r\n//         </SubmitButton>\r\n//         </FormContainer>\r\n//     <Marginer direction=\"vertical\" margin={5} />\r\n\r\n\r\n\r\n//     </BoxContainer>\r\n\r\n//     </>\r\n\r\n//   );\r\n// }\r\n\r\n// export default RegisterationForm\r\n"]},"metadata":{},"sourceType":"module"}