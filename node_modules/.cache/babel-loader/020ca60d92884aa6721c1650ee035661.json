{"ast":null,"code":"var _jsxFileName = \"D:\\\\KavtechHRM\\\\frontend\\\\src\\\\Components\\\\accountBox\\\\accountContext.js\";\nimport { createContext, useState, useHistory } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AccountContext = /*#__PURE__*/createContext();\nexport default AccountContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  //     let loginUser = async (values) => {\n  //         let response = fetch ('http://127.0.0.1:8000/Kavtech/login/', {\n  //             method: 'POST',\n  //             headers: {\n  //                 'Content-Type': 'application/json'\n  //             },\n  //             body:JSON.stringify({'email':null, 'password':null})\n  //         })\n  //         if (response.status === 200){\n  //             setAuthTokens(values)\n  //             setUser(values.access)\n  //           }else{\n  //             alert(\"Something Went Wrong!!!\")\n  //           }\n  //     }\n  //   //Authentication\n  //   let [ authTokens, setAuthTokens] = useState(null)\n  //   let [user, setUser] = useState(null)\n  //   // let [ authTokens, setAuthTokens] = useState(localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) :  null)\n  //   // let [user, setUser] = useState(localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) :  null)\n  //   const history = useHistory();\n  //   let contextData = {\n  //     user:user,\n  //     loginUser:loginUser\n  // }\n  // localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) :  null)\n  //Authentication\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      'name': 'Dennis'\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/KavtechHRM/frontend/src/Components/accountBox/accountContext.js"],"names":["createContext","useState","useHistory","AccountContext","AuthProvider","children"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAmD,OAAnD;;AAEA,OAAO,MAAMC,cAAc,gBAAGH,aAAa,EAApC;AAEP,eAAeG,cAAf;AAGA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AAGE,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAC,cAAS;AAAV,KAAhC;AAAA,cACKA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtCM;KAAMD,Y","sourcesContent":["import { createContext, useState, useHistory} from \"react\";\n\nexport const AccountContext = createContext();\n\nexport default AccountContext\n\n\nexport const AuthProvider = ({children}) => {\n//     let loginUser = async (values) => {\n//         let response = fetch ('http://127.0.0.1:8000/Kavtech/login/', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body:JSON.stringify({'email':null, 'password':null})\n//         })\n//         if (response.status === 200){\n//             setAuthTokens(values)\n//             setUser(values.access)\n    \n//           }else{\n//             alert(\"Something Went Wrong!!!\")\n    \n//           }\n//     }\n//   //Authentication\n//   let [ authTokens, setAuthTokens] = useState(null)\n//   let [user, setUser] = useState(null)\n//   // let [ authTokens, setAuthTokens] = useState(localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) :  null)\n//   // let [user, setUser] = useState(localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) :  null)\n//   const history = useHistory();\n//   let contextData = {\n//     user:user,\n//     loginUser:loginUser\n// }\n// localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) :  null)\n\n  //Authentication\n\n   \n    return(\n        <AccountContext.Provider value={{'name' : 'Dennis'}}>\n            {children}\n        </AccountContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}