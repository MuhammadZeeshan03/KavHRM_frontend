{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Kav_frontEnd_Backend\\\\KavtechHRM\\\\frontend\\\\src\\\\Components\\\\accountBox\\\\RegisterationForm.jsx\";\nimport React, { useContext, useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle, faCheckCircle, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport zxcvbn from 'zxcvbn';\nimport { Button, Link } from '@material-ui/core';\nimport { useFormik } from \"formik\";\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Icon from './icon';\nimport useStyles from './styles';\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { AUTH } from '../../Components/constants/actionTypes';\nimport { BoldLink, BoxContainer, FieldContainer, FieldError, FormContainer, FormSuccess, Input, MutedLink, SubmitButton, FormError, Validity } from \"./common\";\nimport { Marginer } from \"./../marginer/index\";\nimport { AccountContext } from \"./accountContext\";\nimport './validity.css';\nimport { nodeName } from \"jquery\";\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RegisterationForm(props) {\n  //   const [ password, setPassword] = useState('');\n  //   const testResult = zxcvbn(password);\n  // const num = testResult.score * 100/4;\n  // const [errorMessage, setErrorMessage] = useState('')\n  // const [success, setSuccess] = useState(null);\n  // const [error, setError] = useState(null);\n  // const onSubmit = async (values) => {\n  //   const { confirmPassword, ...data } = values;\n  //   const response = await axios\n  //     .post(\"http://127.0.0.1:8000/Kavtech/register/\", data)\n  //     .catch((err) => {\n  //       if (err && err.response) setError(err.response.data.message);\n  //       setSuccess(null);\n  //     });\n  //   if (response && response.data) {\n  //     setError(null);\n  //     setSuccess(response.data.message);\n  //     formik.resetForm();\n  //   }\n  // };\n  //   const changePasswordColor =   () => ( {\n  //     width : `${num}%`,\n  //     background :  funcProgressColor(),\n  //     height : ' 6px'\n  //   })\n  //   const funcProgressColor = () => {\n  //     switch(testResult.score) {\n  //       case 0:\n  //         return '#828282';\n  //       case 1:\n  //         return '#EA1111';\n  //       case 2:\n  //         return '#FFAD00';\n  //       case 3:\n  //         return '#9bc158';\n  //       case 4:\n  //         return '#00b500';\n  //         default:\n  //           return nodeName;\n  //     }\n  //   }\n  //   const [show, setShow] = useState(false);\n  //   const { switchToSignin } = useContext(AccountContext);\n  //   const handleShowHide =() =>{\n  //     setShow(!show);\n  //     //  PasswordStrength meter\n  //   };\n  //   const formik = useFormik({\n  //     initialValues: {\n  //       username: \"\",\n  //       email: \"\",\n  //       password: \"\",\n  //     },\n  //     validateOnBlur: true,\n  //     // onSubmit,\n  //     // validationSchema: validationSchema,\n  //   });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello How are you!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_c = RegisterationForm;\nexport default RegisterationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterationForm\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/Kav_frontEnd_Backend/KavtechHRM/frontend/src/Components/accountBox/RegisterationForm.jsx"],"names":["React","useContext","useState","FontAwesomeIcon","faTimesCircle","faCheckCircle","faEye","faEyeSlash","zxcvbn","Button","Link","useFormik","GoogleLogin","useDispatch","useHistory","Icon","useStyles","yup","axios","AUTH","BoldLink","BoxContainer","FieldContainer","FieldError","FormContainer","FormSuccess","Input","MutedLink","SubmitButton","FormError","Validity","Marginer","AccountContext","nodeName","validator","RegisterationForm","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,EAAuBC,aAAvB,EAAsCC,KAAtC,EAA6CC,UAA7C,QAA+D,mCAA/D;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,EAAgBC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAkB,QAAlB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,wCAArB;AACA,SACEC,QADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,WANF,EAOEC,KAPF,EAQEC,SARF,EASEC,YATF,EAUEC,SAVF,EAWEC,QAXF,QAYO,UAZP;AAaA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;;AAOA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAElC;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEE,sBAEF;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBAFE;AAOD;;KAnFQD,iB;AAqFT,eAAeA,iBAAf","sourcesContent":["import React, { useContext,useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle,faCheckCircle, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport zxcvbn from 'zxcvbn';\r\nimport { Button,Link } from '@material-ui/core';\r\nimport { useFormik } from \"formik\";\r\nimport {GoogleLogin} from 'react-google-login';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Icon  from './icon';\r\nimport useStyles from './styles';\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { AUTH } from '../../Components/constants/actionTypes';\r\nimport {\r\n  BoldLink,\r\n  BoxContainer,\r\n  FieldContainer,\r\n  FieldError,\r\n  FormContainer,\r\n  FormSuccess,\r\n  Input,\r\n  MutedLink,\r\n  SubmitButton,\r\n  FormError,\r\n  Validity\r\n} from \"./common\";\r\nimport { Marginer } from \"./../marginer/index\";\r\nimport { AccountContext } from \"./accountContext\";\r\nimport './validity.css';\r\nimport { nodeName } from \"jquery\";\r\nimport validator from 'validator'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction RegisterationForm(props) {\r\n\r\n//   const [ password, setPassword] = useState('');\r\n//   const testResult = zxcvbn(password);\r\n  \r\n// const num = testResult.score * 100/4;\r\n  \r\n\r\n\r\n// const [errorMessage, setErrorMessage] = useState('')\r\n// const [success, setSuccess] = useState(null);\r\n// const [error, setError] = useState(null);\r\n  \r\n// const onSubmit = async (values) => {\r\n//   const { confirmPassword, ...data } = values;\r\n\r\n//   const response = await axios\r\n//     .post(\"http://127.0.0.1:8000/Kavtech/register/\", data)\r\n//     .catch((err) => {\r\n//       if (err && err.response) setError(err.response.data.message);\r\n//       setSuccess(null);\r\n//     });\r\n\r\n//   if (response && response.data) {\r\n//     setError(null);\r\n//     setSuccess(response.data.message);\r\n//     formik.resetForm();\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n//   const changePasswordColor =   () => ( {\r\n//     width : `${num}%`,\r\n//     background :  funcProgressColor(),\r\n//     height : ' 6px'\r\n//   })\r\n\r\n//   const funcProgressColor = () => {\r\n//     switch(testResult.score) {\r\n//       case 0:\r\n//         return '#828282';\r\n//       case 1:\r\n//         return '#EA1111';\r\n//       case 2:\r\n//         return '#FFAD00';\r\n//       case 3:\r\n//         return '#9bc158';\r\n//       case 4:\r\n//         return '#00b500';\r\n//         default:\r\n//           return nodeName;\r\n      \r\n//     }\r\n//   }\r\n\r\n//   const [show, setShow] = useState(false);\r\n//   const { switchToSignin } = useContext(AccountContext);\r\n//   const handleShowHide =() =>{\r\n//     setShow(!show);\r\n//     //  PasswordStrength meter\r\n//   };\r\n\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       username: \"\",\r\n//       email: \"\",\r\n//       password: \"\",\r\n      \r\n//     },\r\n//     validateOnBlur: true,\r\n//     // onSubmit,\r\n//     // validationSchema: validationSchema,\r\n//   });\r\n  \r\n  return (\r\n \r\n<>\r\n<h1>Hello How are you!</h1>\r\n</>\r\n\r\n  );\r\n}\r\n\r\nexport default RegisterationForm\r\n"]},"metadata":{},"sourceType":"module"}